{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\chatbot\\\\frontend_cleaned\\\\src\\\\components\\\\Auth\\\\Login.tsx\",\n  _s = $RefreshSig$();\n// src/components/Auth/Login.tsx\nimport React, { useState } from \"react\";\nimport { loginUser } from \"../../api/authApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setLoading(true);\n    try {\n      const data = await loginUser(email, password);\n      if (data !== null && data !== void 0 && data.token) {\n        // store token in localStorage using key \"token\" (axiosInstance expects this)\n        localStorage.setItem(\"token\", data.token);\n        onLogin(data.token);\n      } else {\n        setError((data === null || data === void 0 ? void 0 : data.error) || \"Login failed\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Login error:\", err);\n      setError((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Network or server error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      required: true,\n      className: \"border p-2 w-full rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      type: \"password\",\n      placeholder: \"Password\",\n      required: true,\n      className: \"border p-2 w-full rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 text-sm\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      className: \"w-full bg-blue-600 text-white py-2 rounded\",\n      children: loading ? \"Logging in...\" : \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"IsjRsG96nAXRCe8vFZRIpCH6p3A=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","loginUser","jsxDEV","_jsxDEV","Login","onLogin","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","handleSubmit","e","preventDefault","data","token","localStorage","setItem","err","_err$response","_err$response$data","console","response","onSubmit","className","children","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/chatbot/frontend_cleaned/src/components/Auth/Login.tsx"],"sourcesContent":["// src/components/Auth/Login.tsx\r\nimport React, { useState } from \"react\";\r\nimport { loginUser } from \"../../api/authApi\";\r\n\r\nconst Login: React.FC<{ onLogin: (token: string) => void }> = ({ onLogin }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setLoading(true);\r\n    try {\r\n      const data = await loginUser(email, password);\r\n      if (data?.token) {\r\n        // store token in localStorage using key \"token\" (axiosInstance expects this)\r\n        localStorage.setItem(\"token\", data.token);\r\n        onLogin(data.token);\r\n      } else {\r\n        setError(data?.error || \"Login failed\");\r\n      }\r\n    } catch (err: any) {\r\n      console.error(\"Login error:\", err);\r\n      setError(err?.response?.data?.error || \"Network or server error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-3\">\r\n      <input\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        placeholder=\"Email\"\r\n        required\r\n        className=\"border p-2 w-full rounded\"\r\n      />\r\n      <input\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        required\r\n        className=\"border p-2 w-full rounded\"\r\n      />\r\n      {error && <p className=\"text-red-500 text-sm\">{error}</p>}\r\n      <button\r\n        type=\"submit\"\r\n        disabled={loading}\r\n        className=\"w-full bg-blue-600 text-white py-2 rounded\"\r\n      >\r\n        {loading ? \"Logging in...\" : \"Login\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}