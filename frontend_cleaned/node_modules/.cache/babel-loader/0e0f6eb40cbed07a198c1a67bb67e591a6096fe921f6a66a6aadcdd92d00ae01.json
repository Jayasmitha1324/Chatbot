{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\chatbot\\\\frontend_cleaned\\\\src\\\\components\\\\Project\\\\UploadFile.tsx\",\n  _s = $RefreshSig$();\n// src/components/Project/UploadFile.tsx\nimport React, { useState } from \"react\";\nimport { uploadFile } from \"../../api/fileApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadFile = ({\n  projectId\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [msg, setMsg] = useState(null);\n  const handleUpload = async () => {\n    if (!file) return alert(\"Choose a file\");\n    try {\n      const res = await uploadFile(projectId, file);\n      setMsg(\"Upload successful\");\n      console.log(\"upload result\", res);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"upload failed\", err);\n      setMsg((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Upload failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3 border rounded bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => {\n        var _e$target$files$, _e$target$files;\n        return setFile((_e$target$files$ = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) !== null && _e$target$files$ !== void 0 ? _e$target$files$ : null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"ml-2 bg-green-600 text-white px-3 rounded\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-sm\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadFile, \"JuV0pDLquI8zGalIjLN73/mjy54=\");\n_c = UploadFile;\nexport default UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["React","useState","uploadFile","jsxDEV","_jsxDEV","UploadFile","projectId","_s","file","setFile","msg","setMsg","handleUpload","alert","res","console","log","err","_err$response","_err$response$data","error","response","data","className","children","type","onChange","e","_e$target$files$","_e$target$files","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/chatbot/frontend_cleaned/src/components/Project/UploadFile.tsx"],"sourcesContent":["// src/components/Project/UploadFile.tsx\r\nimport React, { useState } from \"react\";\r\nimport { uploadFile } from \"../../api/fileApi\";\r\n\r\nconst UploadFile: React.FC<{ projectId: number }> = ({ projectId }) => {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [msg, setMsg] = useState<string | null>(null);\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Choose a file\");\r\n    try {\r\n      const res = await uploadFile(projectId, file);\r\n      setMsg(\"Upload successful\");\r\n      console.log(\"upload result\", res);\r\n    } catch (err: any) {\r\n      console.error(\"upload failed\", err);\r\n      setMsg(err?.response?.data?.error || \"Upload failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-3 border rounded bg-white\">\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files?.[0] ?? null)} />\r\n      <button onClick={handleUpload} className=\"ml-2 bg-green-600 text-white px-3 rounded\">Upload</button>\r\n      {msg && <div className=\"mt-2 text-sm\">{msg}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFile;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAA2C,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEnD,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACJ,IAAI,EAAE,OAAOK,KAAK,CAAC,eAAe,CAAC;IACxC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMZ,UAAU,CAACI,SAAS,EAAEE,IAAI,CAAC;MAC7CG,MAAM,CAAC,mBAAmB,CAAC;MAC3BI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,GAAG,CAAC;IACnC,CAAC,CAAC,OAAOG,GAAQ,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACjBJ,OAAO,CAACK,KAAK,CAAC,eAAe,EAAEH,GAAG,CAAC;MACnCN,MAAM,CAAC,CAAAM,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAbD,aAAA,CAAeI,IAAI,cAAAH,kBAAA,uBAAnBA,kBAAA,CAAqBC,KAAK,KAAI,eAAe,CAAC;IACvD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC;QAAA,IAAAC,gBAAA,EAAAC,eAAA;QAAA,OAAKpB,OAAO,EAAAmB,gBAAA,IAAAC,eAAA,GAACF,CAAC,CAACG,MAAM,CAACC,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC,cAAAD,gBAAA,cAAAA,gBAAA,GAAI,IAAI,CAAC;MAAA;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5E/B,OAAA;MAAQgC,OAAO,EAAExB,YAAa;MAACW,SAAS,EAAC,2CAA2C;MAAAC,QAAA,EAAC;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnGzB,GAAG,iBAAIN,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEd;IAAG;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAvBIF,UAA2C;AAAAgC,EAAA,GAA3ChC,UAA2C;AAyBjD,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}