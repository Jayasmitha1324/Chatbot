datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int            @id @default(autoincrement())
  name          String?
  email         String         @unique
  password      String
  projects      Project[]
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now())
}

model Project {
  id           Int           @id @default(autoincrement())
  name         String
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  prompts      Prompt[]
  chats        Chat[]
  files        File[]
  chatMessages ChatMessage[] // ✅ renamed to plural
  projectFiles ProjectFile[] // ✅ renamed to plural
  createdAt    DateTime      @default(now())
}

model Prompt {
  id        Int      @id @default(autoincrement())
  name      String?
  content   String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  createdAt DateTime @default(now())
}

model Chat {
  id        Int      @id @default(autoincrement())
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id])
  userMsg   String
  botMsg    String
  createdAt DateTime @default(now())
}

model File {
  id           Int      @id @default(autoincrement())
  filename     String
  openAIFileId String?
  project      Project  @relation(fields: [projectId], references: [id])
  projectId    Int
  createdAt    DateTime @default(now())
}

model ChatMessage {
  id          Int      @id @default(autoincrement())
  projectId   Int
  userMessage String?
  botMessage  String?
  createdAt   DateTime @default(now())

  project Project @relation(fields: [projectId], references: [id])
}

model ProjectFile {
  id        Int      @id @default(autoincrement())
  projectId Int
  filename  String
  filepath  String
  createdAt DateTime @default(now())

  project Project @relation(fields: [projectId], references: [id])
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  tokenHash String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
}
